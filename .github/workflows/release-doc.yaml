name: Build Docs

on:
  push:
    tags:
      - "*"

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.9]
    
    runs-on: ${{ matrix.os }}
    steps:
      - name: Dump Github context
        run: echo "$GITHUB_CONTEXT"
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - name: Branch name
        id: branch_name
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}

      - name: Set GIT config
        run: |
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"

      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Global Dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install poetry

      - name: Cache Poetry
        uses: actions/cache@v2
        with:
          path: .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
            ${{ runner.os }}-

      - name: Install Package Dependencies
        run: poetry install

      - name: Create version
        run: |
          poetry run mike deploy $VERSION
          poetry run mike set-default $VERSION
        env:
          VERSION: ${{ steps.branch_name.outputs.SOURCE_TAG }}

      - name: Publish
        run: |
          git push origin HEAD:gh-pages
